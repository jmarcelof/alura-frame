{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["NegociacaoService","_http","HttpService","get","then","negociacoes","map","Negociacao","Date","i","data","quantidade","valor","catch","console","log","erro","Error","Promise","all","obterNegociacoesDaSemana","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaTrasada","results","reduce","flat","result","concat","negociacao","ConnectionFactory","getConnection","NegociacaoDao","connection","negociacaoDao","adiciona","listaTodos","apagaTodos","listaAtual","obterNegociacoes","filter","some","n","isEquals"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["class NegociacaoService {\r\n\r\n    constructor() {\r\n        this._http = new HttpService();\r\n    }\r\n\r\n    obterNegociacoesDaSemana() {\r\n        return this._http.get('negociacoes/semana')\r\n            .then(negociacoes => negociacoes.map(i => new Negociacao(new Date(i.data), i.quantidade, i.valor)))\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error('Erro ao importar negociações da semana');\r\n            });\r\n    }\r\n\r\n    obterNegociacoesDaSemanaAnterior() {\r\n        return this._http.get('negociacoes/anterior')\r\n            .then(negociacoes => negociacoes.map(i => new Negociacao(new Date(i.data), i.quantidade, i.valor)))\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error('Erro ao importar negociações da semana anterior');\r\n            });\r\n    }\r\n\r\n    obterNegociacoesDaSemanaTrasada() {\r\n        return this._http.get('negociacoes/retrasada')\r\n            .then(negociacoes => negociacoes.map(i => new Negociacao(new Date(i.data), i.quantidade, i.valor)))\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error('Erro ao importar negociações da semana retrasada');\r\n            });\r\n    }\r\n\r\n    obterNegociacoes() {\r\n        return Promise.all([\r\n            this.obterNegociacoesDaSemana(),\r\n            this.obterNegociacoesDaSemanaAnterior(),\r\n            this.obterNegociacoesDaSemanaTrasada(),\r\n        ]).then(results => results.reduce((flat, result) => flat.concat(result), []))\r\n        .catch(erro => {throw erro;});\r\n    }\r\n\r\n    cadastra(negociacao) {\r\n        return ConnectionFactory.getConnection()\r\n            .then(connection => new NegociacaoDao(connection))\r\n            .then(negociacaoDao => negociacaoDao.adiciona(negociacao))\r\n            .then(() => \"Negociação adicionada com sucesso!\")\r\n            .catch(erro => {\r\n                throw new Error(erro)\r\n            });\r\n    }\r\n\r\n    lista() {\r\n        return ConnectionFactory.getConnection()\r\n            .then(connection => new NegociacaoDao(connection))\r\n            .then(negociacaoDao => negociacaoDao.listaTodos())\r\n            .catch(erro => {\r\n                throw new Error(erro)\r\n            });\r\n    }\r\n\r\n    apaga() {\r\n        return ConnectionFactory.getConnection()\r\n            .then(connection => new NegociacaoDao(connection))\r\n            .then(negociacaoDao => negociacaoDao.apagaTodos())\r\n            .then(() => \"Negociações apagadas com sucesso!\")\r\n            .catch(erro => {\r\n                throw new Error(erro)\r\n            });\r\n    }\r\n\r\n    importa(listaAtual) {\r\n        return this.obterNegociacoes()\r\n            .then(negociacoes => negociacoes\r\n                .filter(negociacao => !listaAtual.some(n => n.isEquals(negociacao))))\r\n            .catch(erro => {\r\n                throw new Error(erro)\r\n            });\r\n    }\r\n}\r\n"]}