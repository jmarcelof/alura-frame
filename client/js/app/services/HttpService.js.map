{"version":3,"sources":["../../app-es6/services/HttpService.js"],"names":["HttpService","url","fetch","then","_handleErrors","res","json","dado","headers","method","body","JSON","stringify","ok","Error","statusText"],"mappings":";;;;;;IAAMA,W;;;;;;;4BAEEC,G,EAAK;AAAA;;AACL,mBAAOC,MAAMD,GAAN,EACFE,IADE,CACG;AAAA,uBAAO,MAAKC,aAAL,CAAmBC,GAAnB,CAAP;AAAA,aADH,EAEFF,IAFE,CAEG;AAAA,uBAAOE,IAAIC,IAAJ,EAAP;AAAA,aAFH,CAAP;AAGH;;;6BAEIL,G,EAAKM,I,EAAM;AAAA;;AACZ,mBAAOL,MAAMD,GAAN,EAAW;AACdO,yBAAS,EAAC,gBAAgB,kBAAjB,EADK;AAEdC,wBAAQ,MAFM;AAGdC,sBAAMC,KAAKC,SAAL,CAAeL,IAAf;AAHQ,aAAX,EAIJJ,IAJI,CAIC;AAAA,uBAAO,OAAKC,aAAL,CAAmBC,GAAnB,CAAP;AAAA,aAJD,CAAP;AAKH;;;sCAEaA,G,EAAK;AACf,gBAAG,CAACA,IAAIQ,EAAR,EACI,MAAM,IAAIC,KAAJ,CAAUT,IAAIU,UAAd,CAAN;AACJ,mBAAOV,GAAP;AACH","file":"HttpService.js","sourcesContent":["class HttpService {\r\n\r\n    get(url) {\r\n        return fetch(url)\r\n            .then(res => this._handleErrors(res))\r\n            .then(res => res.json());\r\n    }\r\n\r\n    post(url, dado) {\r\n        return fetch(url, {\r\n            headers: {'Content-type': 'application/json'},\r\n            method: 'post',\r\n            body: JSON.stringify(dado),\r\n        }).then(res => this._handleErrors(res));\r\n    }\r\n\r\n    _handleErrors(res) {\r\n        if(!res.ok)\r\n            throw new Error(res.statusText);\r\n        return res;\r\n    }\r\n}\r\n"]}