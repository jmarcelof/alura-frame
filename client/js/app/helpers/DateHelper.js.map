{"version":3,"sources":["../../app-es6/helpers/DateHelper.js"],"names":["DateHelper","Error","texto","test","Date","split","map","val","idx","data","getDate","getMonth","getFullYear"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAAaA,U;AAET,sCAAc;AAAA;;AACV,0BAAM,IAAIC,KAAJ,CAAU,mCAAV,CAAN;AACH;;;;kDAEoBC,K,EAAO;AACxB,4BAAG,CAAC,oBAAoBC,IAApB,CAAyBD,KAAzB,CAAJ,EACI,MAAM,IAAID,KAAJ,CAAU,kCAAV,CAAN;;AAEJ,kEAAWG,IAAX,mCACOF,MACEG,KADF,CACQ,GADR,EAEEC,GAFF,CAEM,UAACC,GAAD,EAAMC,GAAN;AAAA,mCAAcA,QAAQ,CAAR,GAAYD,MAAM,CAAlB,GAAsBA,GAApC;AAAA,yBAFN,CADP;AAIH;;;kDAEoBE,I,EAAM;AACvB,+BAAUA,KAAKC,OAAL,EAAV,UAA4BD,KAAKE,QAAL,KAAkB,CAA9C,UAAmDF,KAAKG,WAAL,EAAnD;AACH","file":"DateHelper.js","sourcesContent":["export class DateHelper {\r\n\r\n    constructor() {\r\n        throw new Error('DateHelper cannot be instantiated');\r\n    }\r\n\r\n    static textoParaData(texto) {\r\n        if(!/\\d{4}-\\d{2}-\\d{2}/.test(texto))\r\n            throw new Error('Deve estar no formato aaaa-mm-dd');\r\n\r\n        return new Date(\r\n            ...texto\r\n                .split('-')\r\n                .map((val, idx) => idx === 1 ? val - 1 : val));\r\n    }\r\n\r\n    static dataParaTexto(data) {\r\n        return `${data.getDate()}/${data.getMonth() + 1}/${data.getFullYear()}`\r\n    }\r\n}\r\n"]}